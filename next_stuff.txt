bugs:
	NEED TO MAKE FD_ARRAY to deal with multi PIPES

	calls a builtin on commands like: cat pwd.txt ( calls cat )
	sometimes gives bad arguemnts after mutiple inputs ( freeing problems
	or some memory resycle issues )
	 DONT NEED TO DO THIS THIS ISNT EVEN A BONUS-if quote is unclosed,
	 	reopen input and add to end of input str
	: if Quote is found, save arg until that point, before starting to trim
	cd ~ needs to move to home
	Echo: with no given arg segfaults


Ctrl-D : exit
$? : return value most recent function
Ctrl-\ : kill forground process
| : PIPE
; : do stuff
redir : fuck this shit
fix leaks




File REDIRECTION:
>
takes std input and writes it to a file, over writes existing
	lines, openes a buffer to write into and closes with CTRL_D
>>
appends input to file
<
dup std:in
open file
dup2 to->std:in
restore fd
close


export = check to see if name is used in env name
if it is not add it to the struct list
	re attach the struct list pointer back to the struct
	if the name is already set free (val) and reassign whats being
		instructed to that



NOTES : PARSER NEEDS TO BE ADJUSTED TO STORE FROM $->$ || \0 || ' '
SANDER:
 finished ---> pwd


GRIFFIN:
 finished ---> exit
 finished ---> echo (need to do -n)



ORDER
1st
ENV
 finished ---> EXIT
ECHO
 finished ---> PWD

LATER
EXPORT
UNSET
CD

LAST
PIPES
';'
REDIRECTION
